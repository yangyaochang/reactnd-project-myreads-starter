{"version":3,"sources":["BooksAPI.js","components/Control.js","components/Book.js","components/Bookshelf.js","components/Shelves.js","components/SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Control","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","shelf","hover","event","preventDefault","targetShelf","target","value","id","book","title","author","backgroundImage","setState","fetch","concat","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","update","console","log","editBook","react_default","a","createElement","className","onMouseEnter","activeHover","bind","onMouseLeave","inactiveHover","onChange","handleChange","disabled","Component","Book","control","Control_Control","style","width","height","backgroundSize","Bookshelf","books","map","Book_Book","key","Shelves","Bookshelf_Bookshelf","filter","SearchPage","searchText","updateList","clearList","found","query","_this2","data","error","list","getAssignedBooks","authors","imageLinks","thumbnail","forEach","_this3","react_router_dom","to","type","placeholder","BooksApp","Set","toConsumableArray","has","push","add","react_router","path","SearchPage_SearchPage","exact","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.eeefa925.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react'\nimport {update} from '../BooksAPI'\n\n// @description Represents a Control\n// @constructor\n// @param {string} title - The id and type of a book\n// @returns {object} book - The UI of the control\n\nexport default class Control extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shelf: null,\n            hover: false\n        }\n    }\n\n    handleChange(event) {\n        event.preventDefault()\n        const targetShelf = event.target.value\n        const id = this.props.id\n        const book = {\n            id: this.props.id,\n            title: this.props.title,\n            author: this.props.author,\n            backgroundImage: this.props.backgroundImage,\n            shelf: targetShelf\n        }\n\n        this.setState({\n            shelf: targetShelf\n        })\n\n        update(book, targetShelf).then(res => {console.log(res)})\n        \n        this.props.editBook(id, book)\n    }\n\n    activeHover() {\n        this.setState({\n            hover: true\n        })\n    }\n\n    inactiveHover() {\n        this.setState({\n            hover: false\n        })\n    }\n\n    render() {\n        return (\n            <div className={`book-shelf-changer ${(this.state.hover) ? 'book-shelf-changer-hover' : ''}`} onMouseEnter = {this.activeHover.bind(this)} onMouseLeave = {this.inactiveHover.bind(this)}>\n                <select value = {this.state.shelf || this.props.shelf} onChange = {this.handleChange.bind(this)}>\n                    <option value=\"move\" disabled>Move to...</option>\n                    <option value=\"currentlyReading\">Currently Reading</option>\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">None</option>\n                </select>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport Control from './Control'\n\n// @description Represents a book\n// @constructor\n// @param {string} title - The title of the book\n// @returns {object} book - The UI of the book\n\nexport default class Book extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hover: false\n        }\n    }\n\n    activeHover() {\n        this.setState({\n            hover: true\n        })\n    }\n\n    inactiveHover() {\n        this.setState({\n            hover: false\n        })\n    }\n\n    render () {\n        const control =  <Control \n                            title = {this.props.title} \n                            author = {this.props.author} \n                            backgroundImage = {this.props.backgroundImage} \n                            id = {this.props.id} \n                            shelf = {this.props.shelf} \n                            editBook = {this.props.editBook}\n                        />\n\n        return (\n            <div className=\"book\">\n                <div className=\"book-top\" onMouseEnter = {this.activeHover.bind(this)} onMouseLeave = {this.inactiveHover.bind(this)}>\n                    {(this.state.hover) ? <div className=\"book-cover-faded\"></div> : null}\n                    <div className=\"book-cover\" \n                        style={{ \n                            width: 150, \n                            height: 200,\n                            backgroundSize: 'contain', \n                            backgroundImage: `url(${this.props.backgroundImage})`\n                        }}>\n                    </div>\n                    {(this.state.hover) ? control : null}\n                </div>\n    \n                <div className=\"book-title\">{this.props.title}</div>\n                <div className=\"book-authors\">{this.props.author}</div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport Book from './Book'\nimport {getAll} from '../BooksAPI'\n\n// @description Represents a bookshelf\n// @constructor\n// @param {string} title - An array of books\n// @returns {string} author - The UI of the books in same shelf\n\nexport default class Bookshelf extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return (\n            <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">{this.props.shelf}</h2>\n                <div className=\"bookshelf-books\">\n                    {this.props.books.map(book => \n                        <Book \n                            title = {book.title} \n                            author = {book.author} \n                            backgroundImage = {book.backgroundImage} \n                            key = {book.id} \n                            id = {book.id}\n                            shelf = {book.shelf}\n                            editBook = {this.props.editBook}\n                        />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport Bookshelf from './Bookshelf'\n\n// @description Contains all shelves\n// @constructor\n// @param {string} title\n// @returns {object} author - Three different shelves\n\nexport default function Shelves(props) {\n    return (\n        <div>\n            <Bookshelf shelf = {'Currently Reading'} books = {props.books.filter(book => book.shelf === 'currentlyReading')} editBook = {props.editBook}/>\n            <Bookshelf shelf = {'Want to Read'} books = {props.books.filter(book => book.shelf === 'wantToRead')} editBook = {props.editBook}/>\n            <Bookshelf shelf = {'Read'} books = {props.books.filter(book => book.shelf === 'read')} editBook = {props.editBook}/>\n        </div>\n    )\n}","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {search} from '../BooksAPI'\nimport Book from './Book'\n\n// @description Represents the search page\n// @constructor\n// @param {string} title - editBook() function\n// @returns {object} book - The UI of search page\n\nexport default class SearchPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            searchText: '',\n            books: [],\n            found: true\n        }\n    }\n    \n    handleChange = event => {\n        event.preventDefault()\n        const value = event.target.value\n\n        this.setState({\n            searchText: value\n        })\n\n        if (value !== '') {this.updateList(value)}\n        else {this.clearList()}\n    }\n\n    updateList(value) {\n        search(value).then(books => {\n            console.log(books)\n\n            if (books.error) {\n                this.setState({\n                    found: false\n                })\n            } else {\n                let list = this.getAssignedBooks()\n\n                this.setState({\n                    books: books.map(book => {\n                        return {\n                            id: book.id,\n                            title: book.title,\n                            author: ('authors' in book) ? book.authors : null,\n                            backgroundImage: ('imageLinks' in book) ? book.imageLinks.thumbnail : null,\n                            shelf: (book.id in list) ? list[book.id] : 'none'\n                        }\n                    }),\n                    found: true\n                }) \n            }        \n        })\n    }\n\n    clearList() {\n        this.setState({\n            books: []\n        }) \n    }\n\n    getAssignedBooks() {\n        let list = {}\n\n        this.props.books.forEach(book => {\n            list[book.id] = book.shelf\n        })\n\n        return list\n    }\n\n    render() {\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link to = '/'>\n                        <button className=\"close-search\">Close</button>\n                    </Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input \n                            type=\"text\" \n                            placeholder=\"Search by title or author\"\n                            value = {this.state.searchText}\n                            onChange = {this.handleChange}\n                        />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {(this.state.found) ? this.state.books.map(book => \n                            <Book \n                                title = {book.title} \n                                author = {book.author}\n                                backgroundImage = {book.backgroundImage} \n                                key = {book.id} \n                                id = {book.id}\n                                shelf = {book.shelf}\n                                editBook = {this.props.editBook}\n                            />\n                        ) : <div>No Results Found</div>}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './App.css'\nimport Shelves from './components/Shelves'\nimport SearchPage from './components/SearchPage'\nimport {Link, Route} from 'react-router-dom'\nimport {getAll} from './BooksAPI'\n\n// @description Represents the whole app, containing books data\n// @constructor\n// @param {string} title - \n// @returns {object} book - The UI of the whole app\n\nclass BooksApp extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      books: [],\n      id: null\n    }\n  }\n\n  componentDidMount() {\n    getAll().then(books => {\n        console.log(books)\n\n        books = books.map(book => {\n          return {\n              id: book.id,\n              title: book.title,\n              author: book.authors,\n              backgroundImage: book.imageLinks.thumbnail,\n              shelf: book.shelf\n          }\n        })\n        \n        let id = books.map(book => book.id)\n\n        this.setState({\n            books: books,\n            id: new Set(id)\n        })            \n    }) \n  }\n\n  editBook(id, target) {\n      let books = [...this.state.books]\n\n      if (this.state.id.has(id)) {\n        books.forEach(book => {\n          if (book.id === id) {\n              book.shelf = target.shelf\n          }\n        })\n      } else {\n        books.push(target)\n        this.state.id.add(target.id)\n      }\n\n      this.setState({\n          books: books\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n          <Route path = '/search'>\n            <SearchPage editBook = {this.editBook.bind(this)} books = {this.state.books}/>\n          </Route>\n      \n          <Route exact path = '/'>\n            <div className=\"list-books\">\n              <div className=\"list-books-title\">\n                <h1>My Reads</h1>\n              </div>\n              \n              <div className=\"list-books-content\">\n                <Shelves books = {this.state.books} editBook = {this.editBook.bind(this)}/>\n              </div>\n              <Link to = '/search'>\n                <div className=\"open-search\">\n                  <button>Add a book</button>\n                </div>\n              </Link>\n            </div>\n          </Route>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter>\n                    <App />\n                </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}